#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ActiveEffectsHudWidget

#include "Basic.hpp"

#include "ActiveEffectsHudWidget_classes.hpp"
#include "ActiveEffectsHudWidget_parameters.hpp"


namespace SDK
{

// Function ActiveEffectsHudWidget.ActiveEffectsHudWidget_C.ExecuteUbergraph_ActiveEffectsHudWidget
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActiveEffectsHudWidget_C::ExecuteUbergraph_ActiveEffectsHudWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActiveEffectsHudWidget_C", "ExecuteUbergraph_ActiveEffectsHudWidget");

	Params::ActiveEffectsHudWidget_C_ExecuteUbergraph_ActiveEffectsHudWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActiveEffectsHudWidget.ActiveEffectsHudWidget_C.OnActiveEffectAdded
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FActiveEffectTrackingData        activeEffectTrackingDataEntry                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UActiveEffectsHudWidget_C::OnActiveEffectAdded(const struct FActiveEffectTrackingData& activeEffectTrackingDataEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActiveEffectsHudWidget_C", "OnActiveEffectAdded");

	Params::ActiveEffectsHudWidget_C_OnActiveEffectAdded Parms{};

	Parms.activeEffectTrackingDataEntry = std::move(activeEffectTrackingDataEntry);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActiveEffectsHudWidget.ActiveEffectsHudWidget_C.Event_OnHudModeChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// EHudMode                                newHudMode                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActiveEffectsHudWidget_C::Event_OnHudModeChanged(EHudMode newHudMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActiveEffectsHudWidget_C", "Event_OnHudModeChanged");

	Params::ActiveEffectsHudWidget_C_Event_OnHudModeChanged Parms{};

	Parms.newHudMode = newHudMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActiveEffectsHudWidget.ActiveEffectsHudWidget_C.Event_OnWatchedPlayerChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// class ARBPlayer*                        oldPlayer                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ARBPlayer*                        NewPlayer                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActiveEffectsHudWidget_C::Event_OnWatchedPlayerChanged(class ARBPlayer* oldPlayer, class ARBPlayer* NewPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActiveEffectsHudWidget_C", "Event_OnWatchedPlayerChanged");

	Params::ActiveEffectsHudWidget_C_Event_OnWatchedPlayerChanged Parms{};

	Parms.oldPlayer = oldPlayer;
	Parms.NewPlayer = NewPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActiveEffectsHudWidget.ActiveEffectsHudWidget_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UActiveEffectsHudWidget_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActiveEffectsHudWidget_C", "PreConstruct");

	Params::ActiveEffectsHudWidget_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActiveEffectsHudWidget.ActiveEffectsHudWidget_C.AddActiveEffect
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FActiveEffectTrackingData        activeEffectTrackingDataEntry                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// float                                   delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActiveEffectsHudWidget_C::AddActiveEffect(const struct FActiveEffectTrackingData& activeEffectTrackingDataEntry, float delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActiveEffectsHudWidget_C", "AddActiveEffect");

	Params::ActiveEffectsHudWidget_C_AddActiveEffect Parms{};

	Parms.activeEffectTrackingDataEntry = std::move(activeEffectTrackingDataEntry);
	Parms.delay = delay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActiveEffectsHudWidget.ActiveEffectsHudWidget_C.UpdateActiveEffect
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FActiveEffectTrackingData        activeEffectTrackingDataEntry                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UActiveEffectsHudWidget_C::UpdateActiveEffect(const struct FActiveEffectTrackingData& activeEffectTrackingDataEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActiveEffectsHudWidget_C", "UpdateActiveEffect");

	Params::ActiveEffectsHudWidget_C_UpdateActiveEffect Parms{};

	Parms.activeEffectTrackingDataEntry = std::move(activeEffectTrackingDataEntry);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActiveEffectsHudWidget.ActiveEffectsHudWidget_C.RemoveActiveEffect
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             EffectId                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActiveEffectsHudWidget_C::RemoveActiveEffect(const class FName& EffectId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActiveEffectsHudWidget_C", "RemoveActiveEffect");

	Params::ActiveEffectsHudWidget_C_RemoveActiveEffect Parms{};

	Parms.EffectId = EffectId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActiveEffectsHudWidget.ActiveEffectsHudWidget_C.Refresh
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FActiveEffectTrackingData>activeEffectTrackingDataEntries                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UActiveEffectsHudWidget_C::Refresh(TArray<struct FActiveEffectTrackingData>& activeEffectTrackingDataEntries)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActiveEffectsHudWidget_C", "Refresh");

	Params::ActiveEffectsHudWidget_C_Refresh Parms{};

	Parms.activeEffectTrackingDataEntries = std::move(activeEffectTrackingDataEntries);

	UObject::ProcessEvent(Func, &Parms);

	activeEffectTrackingDataEntries = std::move(Parms.activeEffectTrackingDataEntries);
}


// Function ActiveEffectsHudWidget.ActiveEffectsHudWidget_C.TryAddDelayedEffects
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UActiveEffectsHudWidget_C::TryAddDelayedEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActiveEffectsHudWidget_C", "TryAddDelayedEffects");

	UObject::ProcessEvent(Func, nullptr);
}

}

